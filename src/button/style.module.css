.button {
	--size: 36px;
	--space: calc(var(--size) * 0.25);

	--icon-size: calc(var(--size) * 3 / 5);

	--timeout: 1500ms;
	--transition-speed: 200ms;

	--blur: 24px;

	box-sizing: border-box;

	position: relative;

	display: flex;
	justify-content: flex-end;
	align-items: center;

	background: none;
	border: none;

	width: var(--size);
	height: var(--size);
	min-width: var(--size);
	min-height: var(--size);

	padding: 0;
	margin: 0 0 auto auto;
}

.button-content {
	position: absolute;
	top: 0;
	right: 0;

	display: flex;
	justify-content: flex-end;
	align-items: center;
	gap: 4px;

	border-radius: 6px;

	width: var(--size);
	height: var(--size);
	min-width: var(--size);
	min-height: var(--size);
	max-width: fit-content;

	/* overflow: hidden; */
}

.button:hover .button-content {
	cursor: pointer;

	width: fit-content;
}

.container {
	position: relative;

	display: flex;
	justify-content: center;
	align-items: center;

	background: light-dark(hsla(0, 0%, 0%, 0.06), hsla(0, 0%, 100%, 0.04));
	border-radius: 6px;

	height: var(--size);
	min-height: var(--size);
}

.content {
	display: flex;
	justify-content: center;
	align-items: center;

	padding: var(--space);
}

.icon-container,
.icon-content {
	width: var(--size);
	min-width: var(--size);
}

.icon-content {
	position: absolute;
}

.icon {
	position: absolute;

	stroke-width: 2px;
	stroke-linecap: round;
	stroke-linejoin: round;
	stroke: currentColor;
	fill: transparent;

	color: light-dark(hsla(0, 0%, 75%), hsla(0, 0%, 33%));

	width: var(--icon-size);
	height: var(--icon-size);

	transition: opacity var(--transition-speed) ease-out;
}

.button:hover .icon-ready {
	color: light-dark(hsla(0, 0%, 50%), hsla(0, 0%, 66%));
}

.button:hover .icon {
	transition-delay: var(--transition-speed);
}

.button[data-status='COPIED'] .icon-ready {
	opacity: 0.1;
	transition-delay: 0s;
}

.icon {
	stroke-width: 2.5px;

	stroke-dasharray: 100;
	stroke-dashoffset: 0;

	animation: draw var(--timeout) ease-out;
}

.icon-copied {
	color: green;
}

.icon-error {
	color: red;
	animation-direction: reverse;
}

.text-container {
	max-width: 0%;
	transition: all calc(var(--transition-speed) * 2) ease-in;
}

.button:hover .text-container {
	max-width: 100%;
	transition: all var(--transition-speed) ease-in;
}

.text-content {
	display: flex;

	width: fit-content;

	overflow: hidden;

	/* outline: 1px solid blue; */
}

.text {
	text-align: end;

	transform: translateX(200%);

	width: fit-content;

	overflow: hidden;

	transition: all var(--transition-speed) ease-out;

	/* outline: 1px solid red; */
}

.button:hover .text {
	transform: translateX(0%);
}

.button[data-status='READY'] .text-ready {
	max-width: 100%;
}

.button[data-status='READY'] .text-copied {
	transform: translateX(200%);
}

.button[data-status='COPIED'] .text-copied {
	transform: translateX(0%);
	max-width: 100%;
	transition-delay: var(--transition-speed);
}

.button[data-status='READY'] .text-error {
	transform: translateX(-200%);
}

.button[data-status='ERROR'] .text-error {
	transform: translateX(0%);
	max-width: 100%;
	transition-delay: var(--transition-speed);
}

/* .tooltip {
	position: absolute;
	top: 0;
	right: 100%;

	display: flex;
	justify-content: flex-end;
	align-items: center;

	pointer-events: none;

	font-size: 12px;
	font-weight: 500;

	color: light-dark(hsla(0, 0%, 50%), hsla(0, 0%, 66%));
	background: light-dark(hsla(0, 0%, 0%, 0.06), hsla(0, 0%, 100%, 0.04));
	backdrop-filter: blur(var(--blur));
	border-radius: 0.5em;

	height: var(--size);
	max-width: 0px;
	max-height: var(--size);

	transform: translateX(var(--size));

	padding: 0;
	margin: 0;

	overflow: hidden;

	transition: all 200ms ease-out 100ms;
}

.button:hover .tooltip {
	transform: translateX(-4px);
	max-width: calc(var(--icon-size) * 3);
	transition: all 150ms ease-out var(--timeout);
}

.text {
	display: grid;
	grid-template-rows: repeat(3, var(--size));
	justify-content: center;
	align-items: center;

	transform: translate(100%, 0);

	padding: 0 var(--space);

	transition: all 200ms ease-in;
}

.button:hover .text {
	transform: translate(0%, 0);
	transition: all 150ms ease-out calc(var(--timeout) + 100ms);
}

.copied-text {
	transform: translate(0%, calc(var(--size)));
}

.error-text {
	transform: translate(0%, calc(-1 * var(--size)));
} */

@keyframes draw {
	from {
		stroke-dashoffset: 100;
	}

	10% {
		stroke-dashoffset: 200;
	}

	90% {
		stroke-dashoffset: 200;
	}

	to {
		stroke-dashoffset: 300;
	}
}
